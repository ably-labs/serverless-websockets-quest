@page "/game/{questId}"
@inject HttpClient Http
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@inject IRealtimeClient RealtimeClient

<PageTitle>Serverless WebSockets Quest</PageTitle>

<p role="status">Player ID: @playerId</p>

<button id="attackButton" @onclick="Attack">Attack</button>

@code {

    [Parameter]
    public string? QuestId { get; set; }

    private IRealtimeChannel _channel;
    private string playerId;

    private void Attack()
    {
        // Call execute turn endpoint with QuestID and PlayerID
    }

    protected override async Task OnInitializedAsync()
    {
        QuestId = QuestId;
        playerId = Guid.NewGuid().ToString();
        // Join the channel, read it from the url
        // Publish player image via Presence
        try
        {
            _channel = RealtimeClient.Channels.Get(QuestId);
            _channel.Presence.Subscribe(message => HandlePresence(message.Data));
            _channel.Subscribe("update-player", message => HandleUpdatePlayer(message.Data));
            _channel.Subscribe("check-player-turn", message => HandleCheckPlayerTurn(message.Data));
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }

    private void HandlePresence(object data)
    { }

    private void HandleUpdatePlayer(object data)
    { }

      private void HandleCheckPlayerTurn(object data)
    { }
}
